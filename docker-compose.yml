version: "3.8"
services:
  client:
    build:
      context: .
      dockerfile: docker/client/Dockerfile
    ports:
      - 80:80
    environment:
      NGINX_PORT: 80
  postgres:
    image: postgres:12
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./postgres:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_PASSWORD: password
  graphql-engine:
    image: hasura/graphql-engine:v1.3.3
    hostname: "hasura"
    ports:
      - 8080:8080
    depends_on:
      - postgres
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:password@postgres:5432/postgres
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: anonymous
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_ENABLED_APIS: metadata, graphql, pgdump
      HASURA_GRAPHQL_ADMIN_SECRET: secretSECRETsecretSECRETsecretSECRET
      HASURA_GRAPHQL_JWT_SECRET: '{"type": "HS256", "key": "secretSECRETsecretSECRETsecretSECRET"}'
  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin
      PGADMIN_DEFAULT_PASSWORD: SecretSecretSecret123123123
    ports:
      - 8081:80
    volumes:
      - pgadmin_data:/var/lib/pgadmin
volumes:
  db_data:
  pgadmin_data:
